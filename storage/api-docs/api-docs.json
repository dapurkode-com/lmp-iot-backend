{
    "openapi": "3.0.0",
    "info": {
        "title": "LMP IoT Dashboard API Documentations",
        "contact": {
            "email": "i.g.b.n.satyawibawa@gmail.com"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://lmp.dapurkode.com",
            "description": "Dapurkode API Server"
        },
        {
            "url": "http://localhost:8000",
            "description": "Local Testing Server"
        }
    ],
    "paths": {
        "/api/calorie-expended": {
            "get": {
                "tags": [
                    "Calorie Expended"
                ],
                "summary": "Collection of Calorie Expended Raw Data",
                "operationId": "calorieExpendedIndex",
                "parameters": [
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sorting type",
                        "allowEmptyValue": true,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ASC",
                                    "DESC"
                                ]
                            },
                            "default": "DESC"
                        }
                    },
                    {
                        "name": "number_item",
                        "in": "query",
                        "description": "Number of collection item per one page",
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 5,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Filter microtime start date. Must be together with end_date",
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "Filter microtime end date. Must be together with start_date",
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Collections of Calorie",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CalorieCollection"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/calorie-expended/{id}": {
            "get": {
                "tags": [
                    "Calorie Expended"
                ],
                "summary": "Specific Raw Data of Calorie Expended",
                "operationId": "calorieExpendedShow",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Calorie Expended Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Calorie Raw Data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CalorieResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Data not found"
                    }
                }
            }
        },
        "/api/calorie-expended/today": {
            "get": {
                "tags": [
                    "Calorie Expended"
                ],
                "summary": "Lastest Calorie Expended today",
                "operationId": "calorieExpendedTodayLatest",
                "responses": {
                    "200": {
                        "description": "Calorie Raw Data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CalorieResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Data not found"
                    }
                }
            }
        },
        "/api/calorie-intake": {
            "get": {
                "tags": [
                    "Calorie Intake"
                ],
                "summary": "Collection of Calorie Intake Raw Data",
                "operationId": "calorieIntakeIndex",
                "parameters": [
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sorting type",
                        "allowEmptyValue": true,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ASC",
                                    "DESC"
                                ]
                            },
                            "default": "DESC"
                        }
                    },
                    {
                        "name": "number_item",
                        "in": "query",
                        "description": "Number of collection item per one page",
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 5,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Filter microtime start date. Must be together with end_date",
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "Filter microtime end date. Must be together with start_date",
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Collections of Calorie",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CalorieCollection"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Calorie Intake"
                ],
                "summary": "Store new Calorie Intake",
                "operationId": "CalorieIntakeStore",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CalorieRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/api/calorie-intake/{id}": {
            "get": {
                "tags": [
                    "Calorie Intake"
                ],
                "summary": "Specific Raw Data of Calorie Intake",
                "operationId": "calorieIntakeShow",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Calorie Intake Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Calorie Raw Data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CalorieResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Data not found"
                    }
                }
            }
        },
        "/api/calorie-intake/today": {
            "get": {
                "tags": [
                    "Calorie Intake"
                ],
                "summary": "Lastest Calorie Intake today",
                "operationId": "calorieIntakeTodayLatest",
                "responses": {
                    "200": {
                        "description": "Calorie Raw Data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CalorieResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Data not found"
                    }
                }
            }
        },
        "/api/conductivity": {
            "get": {
                "tags": [
                    "Conductivity"
                ],
                "summary": "Collection of Conductivity Raw Data",
                "operationId": "conductivityIndex",
                "parameters": [
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sorting type",
                        "allowEmptyValue": true,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ASC",
                                    "DESC"
                                ]
                            },
                            "default": "DESC"
                        }
                    },
                    {
                        "name": "number_item",
                        "in": "query",
                        "description": "Number of collection item per one page",
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 5,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Filter microtime start date. Must be together with end_date",
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "Filter microtime end date. Must be together with start_date",
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Collections of Conductivity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConductivityCollection"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Conductivity"
                ],
                "summary": "Store new conductivity",
                "operationId": "ConductivityStore",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ConductivityRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/api/conductivity/{id}": {
            "get": {
                "tags": [
                    "Conductivity"
                ],
                "summary": "Specific Raw Data of Conductivity",
                "operationId": "conductivityShow",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Conductivity Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Conductivity Raw Data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConductivityResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Data not found"
                    }
                }
            }
        },
        "/api/conductivity/latest": {
            "get": {
                "tags": [
                    "Conductivity"
                ],
                "summary": "Latest Data of Conductivity",
                "operationId": "conductivityLatest",
                "responses": {
                    "200": {
                        "description": "Conductivity Raw Data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConductivityResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Data not found"
                    }
                }
            }
        },
        "/api/heart-rate": {
            "get": {
                "tags": [
                    "Heart Rate"
                ],
                "summary": "Collection of Heart Rate Raw Data",
                "operationId": "heartRateIndex",
                "parameters": [
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sorting type",
                        "allowEmptyValue": true,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ASC",
                                    "DESC"
                                ]
                            },
                            "default": "DESC"
                        }
                    },
                    {
                        "name": "number_item",
                        "in": "query",
                        "description": "Number of collection item per one page",
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 5,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Filter microtime start date. Must be together with end_date",
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "Filter microtime end date. Must be together with start_date",
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Collections of Heart Rate",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HeartRateCollection"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/heart-rate/{id}": {
            "get": {
                "tags": [
                    "Heart Rate"
                ],
                "summary": "Specific Raw Data of Heart Rate",
                "operationId": "heartRateShow",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Heart Rate Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Heart Rate Raw Data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HeartRateResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Data not found"
                    }
                }
            }
        },
        "/api/heart-rate/today": {
            "get": {
                "tags": [
                    "Heart Rate"
                ],
                "summary": "Latest Data of Heart Rate today",
                "operationId": "heartRateToday",
                "responses": {
                    "200": {
                        "description": "Heart Rate Raw Data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HeartRateResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Data not found"
                    }
                }
            }
        },
        "/api/hydrogauges": {
            "post": {
                "tags": [
                    "Hydrogauges"
                ],
                "summary": "Store new hydrogauges",
                "operationId": "HydrogaugesStore",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/HydrogaugesRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/api/ph": {
            "get": {
                "tags": [
                    "Ph"
                ],
                "summary": "Collection of Ph Raw Data",
                "operationId": "phIndex",
                "parameters": [
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sorting type",
                        "allowEmptyValue": true,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ASC",
                                    "DESC"
                                ]
                            },
                            "default": "DESC"
                        }
                    },
                    {
                        "name": "number_item",
                        "in": "query",
                        "description": "Number of collection item per one page",
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 5,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Filter microtime start date. Must be together with end_date",
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "Filter microtime end date. Must be together with start_date",
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Collections of Ph",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PhCollection"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Ph"
                ],
                "summary": "Store new ph",
                "operationId": "PhStore",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PhRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/api/ph/{id}": {
            "get": {
                "tags": [
                    "Ph"
                ],
                "summary": "Specific Raw Data of Ph",
                "operationId": "phShow",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Ph Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ph Raw Data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PhResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Data not found"
                    }
                }
            }
        },
        "/api/ph/latest": {
            "get": {
                "tags": [
                    "Ph"
                ],
                "summary": "Latest Data of Ph",
                "operationId": "phLatest",
                "responses": {
                    "200": {
                        "description": "Ph Raw Data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PhResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Data not found"
                    }
                }
            }
        },
        "/api/ppm": {
            "get": {
                "tags": [
                    "PPM"
                ],
                "summary": "Collection of PPM Raw Data",
                "operationId": "heartRateIndex",
                "parameters": [
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sorting type",
                        "allowEmptyValue": true,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ASC",
                                    "DESC"
                                ]
                            },
                            "default": "DESC"
                        }
                    },
                    {
                        "name": "number_item",
                        "in": "query",
                        "description": "Number of collection item per one page",
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 5,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Filter microtime start date. Must be together with end_date",
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "Filter microtime end date. Must be together with start_date",
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Collections of PPM",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PpmCollection"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "PPM"
                ],
                "summary": "Store new ppm",
                "operationId": "PpmStore",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PpmRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/api/ppm/{id}": {
            "get": {
                "tags": [
                    "PPM"
                ],
                "summary": "Specific Raw Data of PPM",
                "operationId": "ppmShow",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "PPM Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "PPM Raw Data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PpmResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Data not found"
                    }
                }
            }
        },
        "/api/ppm/latest": {
            "get": {
                "tags": [
                    "PPM"
                ],
                "summary": "Latest Data of PPM",
                "operationId": "ppmLatest",
                "responses": {
                    "200": {
                        "description": "PPM Raw Data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PpmResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Data not found"
                    }
                }
            }
        },
        "/api/sleep": {
            "get": {
                "tags": [
                    "Sleep"
                ],
                "summary": "Collection of Sleep Raw Data",
                "operationId": "sleepIndex",
                "parameters": [
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sorting type",
                        "allowEmptyValue": true,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ASC",
                                    "DESC"
                                ]
                            },
                            "default": "DESC"
                        }
                    },
                    {
                        "name": "number_item",
                        "in": "query",
                        "description": "Number of collection item per one page",
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 5,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Filter microtime start date. Must be together with end_date",
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "Filter microtime end date. Must be together with start_date",
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Collections of Sleep",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SleepCollection"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/sleep/{id}": {
            "get": {
                "tags": [
                    "Sleep"
                ],
                "summary": "Specific Raw Data of Sleep",
                "operationId": "phShow",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Sleep Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sleep Raw Data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SleepResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Data not found"
                    }
                }
            }
        },
        "/api/sleep/today": {
            "get": {
                "tags": [
                    "Sleep"
                ],
                "summary": "Latest Data of Sleep today",
                "operationId": "sleepToday",
                "responses": {
                    "200": {
                        "description": "Todays Latest Sleep Raw Data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SleepResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Data not found"
                    }
                }
            }
        },
        "/api/step": {
            "get": {
                "tags": [
                    "Step"
                ],
                "summary": "Collection of Step Raw Data",
                "operationId": "stepIndex",
                "parameters": [
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sorting type",
                        "allowEmptyValue": true,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ASC",
                                    "DESC"
                                ]
                            },
                            "default": "DESC"
                        }
                    },
                    {
                        "name": "number_item",
                        "in": "query",
                        "description": "Number of collection item per one page",
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 5,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Filter microtime start date. Must be together with end_date",
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "Filter microtime end date. Must be together with start_date",
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Collections of Step",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StepCollection"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/step/{id}": {
            "get": {
                "tags": [
                    "Step"
                ],
                "summary": "Specific Raw Data of Step",
                "operationId": "phShow",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Step Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Step Raw Data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StepResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Data not found"
                    }
                }
            }
        },
        "/api/step/today": {
            "get": {
                "tags": [
                    "Step"
                ],
                "summary": "Latest Data of Step today",
                "operationId": "stepToday",
                "responses": {
                    "200": {
                        "description": "Todays Latest Step Raw Data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StepResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Data not found"
                    }
                }
            }
        },
        "/api/stock": {
            "get": {
                "tags": [
                    "Stock"
                ],
                "summary": "Collection of Stock Raw Data",
                "operationId": "stockIndex",
                "parameters": [
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sorting type",
                        "allowEmptyValue": true,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ASC",
                                    "DESC"
                                ]
                            },
                            "default": "DESC"
                        }
                    },
                    {
                        "name": "number_item",
                        "in": "query",
                        "description": "Number of collection item per one page",
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 5,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "range_month",
                        "in": "query",
                        "description": "Filter expired date range month from today",
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "range_day",
                        "in": "query",
                        "description": "Filter expired date range day from today",
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Collections of Stock",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StockCollection"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Stock"
                ],
                "summary": "Store new Stock",
                "operationId": "stockStore",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/StockRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/api/stock/{id}": {
            "get": {
                "tags": [
                    "Stock"
                ],
                "summary": "Specific Raw Data of Stock",
                "operationId": "stockShow",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Stock Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Stock Raw Data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StockResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Data not found"
                    }
                }
            }
        },
        "/api/stock/summary": {
            "get": {
                "tags": [
                    "Stock"
                ],
                "summary": "Collection of Stock Summary",
                "operationId": "stockSummary",
                "parameters": [
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sorting type",
                        "allowEmptyValue": true,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ASC",
                                    "DESC"
                                ]
                            },
                            "default": "DESC"
                        }
                    },
                    {
                        "name": "number_item",
                        "in": "query",
                        "description": "Number of collection item per one page",
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 5,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "range_month",
                        "in": "query",
                        "description": "Filter expired date range month from today",
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "range_day",
                        "in": "query",
                        "description": "Filter expired date range day from today",
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Collections of Stock Summary",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StockSummaryCollection"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/temperature": {
            "get": {
                "tags": [
                    "Temperature"
                ],
                "summary": "Collection of Temperature Raw Data",
                "operationId": "heartRateIndex",
                "parameters": [
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sorting type",
                        "allowEmptyValue": true,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ASC",
                                    "DESC"
                                ]
                            },
                            "default": "DESC"
                        }
                    },
                    {
                        "name": "number_item",
                        "in": "query",
                        "description": "Number of collection item per one page",
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 5,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Filter microtime start date. Must be together with end_date",
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "Filter microtime end date. Must be together with start_date",
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Collections of Temperature",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TemperatureCollection"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Temperature"
                ],
                "summary": "Store new temperature",
                "operationId": "TemperatureStore",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TemperatureRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/api/temperature/{id}": {
            "get": {
                "tags": [
                    "Temperature"
                ],
                "summary": "Specific Raw Data of Temperature",
                "operationId": "temperatureShow",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Temperature Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Temperature Raw Data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TemperatureResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Data not found"
                    }
                }
            }
        },
        "/api/temperature/latest": {
            "get": {
                "tags": [
                    "Temperature"
                ],
                "summary": "Latest Data of Temperature",
                "operationId": "temperatureLatest",
                "responses": {
                    "200": {
                        "description": "Temperature Raw Data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TemperatureResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Data not found"
                    }
                }
            }
        },
        "/api/weight": {
            "get": {
                "tags": [
                    "Weight"
                ],
                "summary": "Collection of Weight Raw Data",
                "operationId": "weightIndex",
                "parameters": [
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sorting type",
                        "allowEmptyValue": true,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ASC",
                                    "DESC"
                                ]
                            },
                            "default": "DESC"
                        }
                    },
                    {
                        "name": "number_item",
                        "in": "query",
                        "description": "Number of collection item per one page",
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 5,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Filter microtime start date. Must be together with end_date",
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "Filter microtime end date. Must be together with start_date",
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Collections of Weight",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WeightCollection"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/weight/{id}": {
            "get": {
                "tags": [
                    "Weight"
                ],
                "summary": "Specific Raw Data of Weight",
                "operationId": "phShow",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Weight Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Weight Raw Data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WeightResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Data not found"
                    }
                }
            }
        },
        "/api/weight/today": {
            "get": {
                "tags": [
                    "Weight"
                ],
                "summary": "Latest Data of Weight today",
                "operationId": "weightToday",
                "responses": {
                    "200": {
                        "description": "Todays Latest Weight Raw Data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WeightResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Data not found"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "CalorieRequest": {
                "title": "Store Calorie Request",
                "description": "Store calorie request body data",
                "required": [
                    "calorie"
                ],
                "properties": {
                    "calorie": {
                        "description": "Calorie",
                        "type": "number",
                        "format": "float",
                        "example": 42.03
                    }
                },
                "type": "object",
                "xml": {
                    "name": "StoreCalorie"
                }
            },
            "ConductivityRequest": {
                "title": "Store Conductivity Request",
                "description": "Store conductivity request body data",
                "required": [
                    "conductivity"
                ],
                "properties": {
                    "conductivity": {
                        "description": "Conductivity",
                        "type": "number",
                        "example": 3.5
                    }
                },
                "type": "object",
                "xml": {
                    "name": "StoreConductivity"
                }
            },
            "HydrogaugesRequest": {
                "title": "Store Hydrogauge Request",
                "description": "Store Hydrogauge batch request body data",
                "required": [
                    "ph",
                    "ppm",
                    "temperature"
                ],
                "properties": {
                    "temperature": {
                        "description": "temperature",
                        "type": "number",
                        "format": "float",
                        "example": 38.03
                    },
                    "ph": {
                        "description": "Ph",
                        "type": "number",
                        "example": 7
                    },
                    "ppm": {
                        "description": "Ppm",
                        "type": "number",
                        "example": 100
                    },
                    "conductivity": {
                        "description": "Electrical conductivity",
                        "type": "number",
                        "example": 7.5
                    }
                },
                "type": "object",
                "xml": {
                    "name": "StoreHydro"
                }
            },
            "PhRequest": {
                "title": "Store Ph Request",
                "description": "Store ph request body data",
                "required": [
                    "ph"
                ],
                "properties": {
                    "ph": {
                        "description": "Ph",
                        "type": "number",
                        "example": 7
                    }
                },
                "type": "object",
                "xml": {
                    "name": "StorePh"
                }
            },
            "PpmRequest": {
                "title": "Store Ppm Request",
                "description": "Store ppm request body data",
                "required": [
                    "ppm"
                ],
                "properties": {
                    "ppm": {
                        "description": "Ppm",
                        "type": "number",
                        "example": 100
                    }
                },
                "type": "object",
                "xml": {
                    "name": "StorePpm"
                }
            },
            "StockRequest": {
                "title": "StockRequest",
                "description": "Store stock request body data",
                "required": [
                    "barcode",
                    "image_file",
                    "name",
                    "position",
                    "stock",
                    "expired_date"
                ],
                "properties": {
                    "barcode": {
                        "description": "Barcode",
                        "type": "string",
                        "example": "7314123152"
                    },
                    "image_file": {
                        "description": "Image stock",
                        "type": "string",
                        "format": "binary",
                        "example": "7314123152"
                    },
                    "name": {
                        "description": "Item name",
                        "type": "string",
                        "example": "Indomie"
                    },
                    "position": {
                        "description": "Stock Position (IN or OUT)",
                        "type": "string",
                        "example": "IN"
                    },
                    "stock": {
                        "description": "Stock amount",
                        "type": "integer",
                        "example": "5"
                    },
                    "expired_date": {
                        "description": "Expired date",
                        "type": "string",
                        "format": "date",
                        "example": "2021-04-27"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "StockRequest"
                }
            },
            "TemperatureRequest": {
                "title": "Store Ph Request",
                "description": "Store ph request body data",
                "required": [
                    "ph"
                ],
                "properties": {
                    "temperature": {
                        "description": "temperature",
                        "type": "number",
                        "format": "float",
                        "example": 38.03
                    }
                },
                "type": "object",
                "xml": {
                    "name": "StorePh"
                }
            },
            "CalorieCollection": {
                "title": "Calorie Collection",
                "description": "Calorie collection",
                "properties": {
                    "calories": {
                        "description": "Collections of Calories",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CalorieResource"
                        },
                        "readOnly": "true"
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/PaginationResource"
                    }
                },
                "type": "object"
            },
            "CalorieResource": {
                "title": "Calorie Resource",
                "description": "Calorie resource",
                "properties": {
                    "id": {
                        "description": "Id of collection",
                        "type": "integer",
                        "readOnly": "true",
                        "example": 1
                    },
                    "calorie": {
                        "description": "Calorie",
                        "type": "integer",
                        "readOnly": "true",
                        "example": 43.02
                    },
                    "microtime": {
                        "description": "Microtime format",
                        "type": "integer",
                        "readOnly": "true",
                        "example": 1619453606584
                    },
                    "datetime": {
                        "description": "Date time format",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true",
                        "example": "2021-04-27 00:13:26"
                    }
                },
                "type": "object"
            },
            "ConductivityCollection": {
                "title": "Conductivity Collection",
                "description": "Conductivity collection",
                "properties": {
                    "conductivities": {
                        "description": "Collections of Conductivity",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ConductivityResource"
                        },
                        "readOnly": "true"
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/PaginationResource"
                    }
                },
                "type": "object"
            },
            "ConductivityResource": {
                "title": "Conductivity Resource",
                "description": "Conductivity resource",
                "properties": {
                    "id": {
                        "description": "Id of collection",
                        "type": "integer",
                        "readOnly": "true",
                        "example": 1
                    },
                    "conductivity": {
                        "description": "Electrical conductivity",
                        "type": "integer",
                        "readOnly": "true",
                        "example": 3.5
                    },
                    "microtime": {
                        "description": "Microtime format",
                        "type": "integer",
                        "readOnly": "true",
                        "example": 1619453606584
                    },
                    "datetime": {
                        "description": "Date time format",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true",
                        "example": "2021-04-27 00:13:26"
                    }
                },
                "type": "object"
            },
            "HeartRateCollection": {
                "title": "Heart Rate Collection",
                "description": "Heart Rate collection",
                "properties": {
                    "rates": {
                        "description": "Collections of Heart Rate",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/HeartRateResource"
                        },
                        "readOnly": "true"
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/PaginationResource"
                    }
                },
                "type": "object"
            },
            "HeartRateResource": {
                "title": "Heart Rate Resource",
                "description": "Heart Rate resource",
                "properties": {
                    "id": {
                        "description": "Id of collection",
                        "type": "integer",
                        "readOnly": "true",
                        "example": 1
                    },
                    "rate": {
                        "description": "Calorie",
                        "type": "integer",
                        "readOnly": "true",
                        "example": 72
                    },
                    "microtime": {
                        "description": "Microtime format",
                        "type": "integer",
                        "readOnly": "true",
                        "example": 1619453606584
                    },
                    "datetime": {
                        "description": "Date time format",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true",
                        "example": "2021-04-27 00:13:26"
                    }
                },
                "type": "object"
            },
            "PaginationResource": {
                "title": "Pagination Resource",
                "description": "Pagination resource",
                "properties": {
                    "total": {
                        "description": "Total of collection",
                        "type": "integer",
                        "readOnly": "true",
                        "example": 5
                    },
                    "count": {
                        "description": "Count of collection",
                        "type": "integer",
                        "readOnly": "true",
                        "example": 15
                    },
                    "per_page": {
                        "description": "Total per page of collection",
                        "type": "integer",
                        "readOnly": "true",
                        "example": 5
                    },
                    "current_page": {
                        "description": "Current number page",
                        "type": "integer",
                        "readOnly": "true",
                        "example": 1
                    },
                    "total_pages": {
                        "description": "Total number of page",
                        "type": "integer",
                        "readOnly": "true",
                        "example": 3
                    }
                },
                "type": "object"
            },
            "PhCollection": {
                "title": "Ph Collection",
                "description": "Ph collection",
                "properties": {
                    "phs": {
                        "description": "Collections of Ph",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PhResource"
                        },
                        "readOnly": "true"
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/PaginationResource"
                    }
                },
                "type": "object"
            },
            "PhResource": {
                "title": "Ph Resource",
                "description": "Ph resource",
                "properties": {
                    "id": {
                        "description": "Id of collection",
                        "type": "integer",
                        "readOnly": "true",
                        "example": 1
                    },
                    "ph": {
                        "description": "Water Ph",
                        "type": "integer",
                        "readOnly": "true",
                        "example": 7
                    },
                    "microtime": {
                        "description": "Microtime format",
                        "type": "integer",
                        "readOnly": "true",
                        "example": 1619453606584
                    },
                    "datetime": {
                        "description": "Date time format",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true",
                        "example": "2021-04-27 00:13:26"
                    }
                },
                "type": "object"
            },
            "PpmCollection": {
                "title": "Ppm Collection",
                "description": "Ppm collection",
                "properties": {
                    "ppms": {
                        "description": "Collections of Ppm",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PpmResource"
                        },
                        "readOnly": "true"
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/PaginationResource"
                    }
                },
                "type": "object"
            },
            "PpmResource": {
                "title": "Ppm Resource",
                "description": "Ppm resource",
                "properties": {
                    "id": {
                        "description": "Id of collection",
                        "type": "integer",
                        "readOnly": "true",
                        "example": 1
                    },
                    "ppm": {
                        "description": "Water PPM",
                        "type": "integer",
                        "readOnly": "true",
                        "example": 53
                    },
                    "microtime": {
                        "description": "Microtime format",
                        "type": "integer",
                        "readOnly": "true",
                        "example": 1619453606584
                    },
                    "datetime": {
                        "description": "Date time format",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true",
                        "example": "2021-04-27 00:13:26"
                    }
                },
                "type": "object"
            },
            "SleepCollection": {
                "title": "Sleep Collection",
                "description": "Sleep collection",
                "properties": {
                    "sleeps": {
                        "description": "Collections of Sleep",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SleepResource"
                        },
                        "readOnly": "true"
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/PaginationResource"
                    }
                },
                "type": "object"
            },
            "SleepResource": {
                "title": "Sleep Resource",
                "description": "Sleep resource",
                "properties": {
                    "id": {
                        "description": "Id of collection",
                        "type": "integer",
                        "readOnly": "true",
                        "example": 1
                    },
                    "start_microtime": {
                        "description": "Start of sleep microtime format",
                        "type": "integer",
                        "readOnly": "true",
                        "example": 1619453606584
                    },
                    "start_datetime": {
                        "description": "Start of sleep date time format",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true",
                        "example": "2021-04-27 00:13:26"
                    },
                    "end_microtime": {
                        "description": "End of sleep microtime format",
                        "type": "integer",
                        "readOnly": "true",
                        "example": 1619453606584
                    },
                    "end_datetime": {
                        "description": "End of sleep date time format",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true",
                        "example": "2021-04-27 00:13:26"
                    }
                },
                "type": "object"
            },
            "StepCollection": {
                "title": "Step Collection",
                "description": "Step collection",
                "properties": {
                    "steps": {
                        "description": "Collections of Step",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/StepResource"
                        },
                        "readOnly": "true"
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/PaginationResource"
                    }
                },
                "type": "object"
            },
            "StepResource": {
                "title": "Step Resource",
                "description": "Step resource",
                "properties": {
                    "id": {
                        "description": "Id of collection",
                        "type": "integer",
                        "readOnly": "true",
                        "example": 1
                    },
                    "step": {
                        "description": "Step",
                        "type": "integer",
                        "readOnly": "true",
                        "example": 72
                    },
                    "microtime": {
                        "description": "Microtime format",
                        "type": "integer",
                        "readOnly": "true",
                        "example": 1619453606584
                    },
                    "datetime": {
                        "description": "Date time format",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true",
                        "example": "2021-04-27 00:13:26"
                    }
                },
                "type": "object"
            },
            "StockCollection": {
                "title": "Stock Collection",
                "description": "Stock collection",
                "properties": {
                    "stocks": {
                        "description": "Collections of Stock",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/StockResource"
                        },
                        "readOnly": "true"
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/PaginationResource"
                    }
                },
                "type": "object"
            },
            "StockResource": {
                "title": "Stock Resource",
                "description": "Stock resource",
                "properties": {
                    "id": {
                        "description": "Id of collection",
                        "type": "integer",
                        "readOnly": "true",
                        "example": 1
                    },
                    "barcode": {
                        "description": "Barcode",
                        "type": "string",
                        "readOnly": "true",
                        "example": 7314123152
                    },
                    "name": {
                        "description": "Item name",
                        "type": "string",
                        "readOnly": "true",
                        "example": "Indomie"
                    },
                    "position": {
                        "description": "Stock Position (IN or OUT)",
                        "type": "string",
                        "readOnly": "true",
                        "example": "IN"
                    },
                    "stock": {
                        "description": "Stock amount",
                        "type": "integer",
                        "readOnly": "true",
                        "example": "5"
                    },
                    "expired_date": {
                        "description": "Expired date",
                        "type": "string",
                        "format": "date",
                        "readOnly": "true",
                        "example": "2021-04-27"
                    },
                    "image_file": {
                        "description": "Name of Image",
                        "type": "string"
                    },
                    "image_url": {
                        "description": "Name of Image",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "StockSummaryCollection": {
                "title": "Stock Summary Collection",
                "description": "Stock Summary collection",
                "properties": {
                    "stocks": {
                        "description": "Collections of Stock",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/StockSummaryResource"
                        },
                        "readOnly": "true"
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/PaginationResource"
                    }
                },
                "type": "object"
            },
            "StockSummaryResource": {
                "title": "Stock Summary Resource",
                "description": "Stock Summary resource",
                "properties": {
                    "barcode": {
                        "description": "Barcode",
                        "type": "string",
                        "readOnly": "true",
                        "example": 7314123152
                    },
                    "name": {
                        "description": "Item name",
                        "type": "string",
                        "readOnly": "true",
                        "example": "Indomie"
                    },
                    "stock": {
                        "description": "Stock amount",
                        "type": "integer",
                        "readOnly": "true",
                        "example": "5"
                    },
                    "expired_date": {
                        "description": "Expired date",
                        "type": "string",
                        "format": "date",
                        "readOnly": "true",
                        "example": "2021-04-27"
                    }
                },
                "type": "object"
            },
            "TemperatureCollection": {
                "title": "Temperature Collection",
                "description": "Temperature collection",
                "properties": {
                    "temperatures": {
                        "description": "Collections of Temperatures",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TemperatureResource"
                        },
                        "readOnly": "true"
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/PaginationResource"
                    }
                },
                "type": "object"
            },
            "TemperatureResource": {
                "title": "Temperature Resource",
                "description": "Temperature resource",
                "properties": {
                    "id": {
                        "description": "Id of collection",
                        "type": "integer",
                        "readOnly": "true",
                        "example": 1
                    },
                    "temperature": {
                        "description": "Temperature",
                        "type": "number",
                        "format": "float",
                        "readOnly": "true",
                        "example": 53.02
                    },
                    "microtime": {
                        "description": "Microtime format",
                        "type": "integer",
                        "readOnly": "true",
                        "example": 1619453606584
                    },
                    "datetime": {
                        "description": "Date time format",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true",
                        "example": "2021-04-27 00:13:26"
                    }
                },
                "type": "object"
            },
            "WeightCollection": {
                "title": "Weight Collection",
                "description": "Weight collection",
                "properties": {
                    "weights": {
                        "description": "Collections of Weights",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WeightResource"
                        },
                        "readOnly": "true"
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/PaginationResource"
                    }
                },
                "type": "object"
            },
            "WeightResource": {
                "title": "Weight Resource",
                "description": "Weight resource",
                "properties": {
                    "id": {
                        "description": "Id of collection",
                        "type": "integer",
                        "readOnly": "true",
                        "example": 1
                    },
                    "weight": {
                        "description": "Weight",
                        "type": "number",
                        "format": "float",
                        "readOnly": "true",
                        "example": 53.02
                    },
                    "microtime": {
                        "description": "Microtime format",
                        "type": "integer",
                        "readOnly": "true",
                        "example": 1619453606584
                    },
                    "datetime": {
                        "description": "Date time format",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true",
                        "example": "2021-04-27 00:13:26"
                    }
                },
                "type": "object"
            }
        }
    },
    "tags": [
        {
            "name": "Calorie Expended",
            "description": "Healthlink - Controller of Calorie Expended"
        },
        {
            "name": "Calorie Intake",
            "description": "Dieat - Controller of Calorie Intake"
        },
        {
            "name": "Conductivity",
            "description": "Hydrogauges - Controller of Electrical Conductivity"
        },
        {
            "name": "Heart Rate",
            "description": "Healthlink - Controller of Heart Rate"
        },
        {
            "name": "Hydrogauges",
            "description": "Hydrogauges - Controller"
        },
        {
            "name": "Ph",
            "description": "Hydrogauges - Controller of Water Acidity"
        },
        {
            "name": "PPM",
            "description": "Hydrogauges - Controller of Water Total Dissolved Solid"
        },
        {
            "name": "Sleep",
            "description": "Heathlink - Controller of Sleep"
        },
        {
            "name": "Step",
            "description": "Heathlink - Controller of Step"
        },
        {
            "name": "Stock",
            "description": "RAMZ - Controller of Stock"
        },
        {
            "name": "Temperature",
            "description": "Hydrogauges - Controller of Water Temperature"
        },
        {
            "name": "Weight",
            "description": "Heathlink - Controller of Weight"
        }
    ],
    "security": [
        []
    ]
}